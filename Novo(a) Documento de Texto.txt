import 'package:flutter/material.dart';

void main() {
  runApp(PoemCatalogApp());
}

class PoemCatalogApp extends StatefulWidget {
  @override
  _PoemCatalogAppState createState() => _PoemCatalogAppState();
}

class _PoemCatalogAppState extends State<PoemCatalogApp> {
  // Lista para armazenar os detalhes dos livros
  List<Map<String, String>> books = [
    {'title': 'LOVECRAFT: Poemas de horror cósmico', 'author': 'H.P. Lovecraft'},
    {'title': 'Edgar Allan Poe: Poemas de mistério e melancolia', 'author': 'Edgar Allan Poe'},
  ];

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Poem Catalog',
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: Color(0xFF2E0249),
        colorScheme: ColorScheme.dark(
          primary: Colors.deepPurple,
        ),
      ),
      home: HomeScreen(books: books, onAddBook: _addBook),
    );
  }

  // Função para adicionar um novo livro à lista
  void _addBook(String title, String author) {
    setState(() {
      books.add({'title': title, 'author': author});
    });
  }
}

class HomeScreen extends StatelessWidget {
  final List<Map<String, String>> books;
  final Function(String, String) onAddBook;

  HomeScreen({required this.books, required this.onAddBook});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF2E0249),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(Icons.search, color: Colors.white),
            SizedBox(width: 10),
            Text('Buscar Poemas Cadavéricos'),
          ],
        ),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Qual o poema TENEBROSO você busca hoje?',
              style: TextStyle(
                color: Colors.white,
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 20),
            TextField(
              style: TextStyle(color: Colors.white),
              decoration: InputDecoration(
                hintText: 'Pesquisar...',
                hintStyle: TextStyle(color: Colors.grey),
                filled: true,
                fillColor: Color(0xFF5D2C6F),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(10),
                  borderSide: BorderSide.none,
                ),
                prefixIcon: Icon(Icons.search, color: Colors.white),
              ),
            ),
            SizedBox(height: 30),
            Expanded(
              child: ListView.builder(
                itemCount: books.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(
                      books[index]['title']!,
                      style: TextStyle(color: Colors.white),
                    ),
                    subtitle: Text(
                      books[index]['author']!,
                      style: TextStyle(color: Colors.grey),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => AddBookScreen(onAddBook: onAddBook),
            ),
          );
        },
        backgroundColor: Colors.purple, // Substituímos por backgroundColor
        child: Icon(Icons.add),
      ),
    );
  }
}

class AddBookScreen extends StatefulWidget {
  final Function(String, String) onAddBook;

  AddBookScreen({required this.onAddBook});

  @override
  _AddBookScreenState createState() => _AddBookScreenState();
}

class _AddBookScreenState extends State<AddBookScreen> {
  final _formKey = GlobalKey<FormState>();
  String _title = '';
  String _author = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF2E0249),
        title: Text('Cadastrar Novo Livro'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'Título',
                  filled: true,
                  fillColor: Color(0xFF5D2C6F),
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                style: TextStyle(color: Colors.white),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira o título do livro';
                  }
                  return null;
                },
                onSaved: (value) {
                  _title = value ?? '';
                },
              ),
              SizedBox(height: 20),
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'Autor',
                  filled: true,
                  fillColor: Color(0xFF5D2C6F),
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                style: TextStyle(color: Colors.white),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira o autor do livro';
                  }
                  return null;
                },
                onSaved: (value) {
                  _author = value ?? '';
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    _formKey.currentState!.save();
                    widget.onAddBook(_title, _author);
                    Navigator.pop(context);
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.purple, // Substituímos por backgroundColor
                ),
                child: Text('Cadastrar Livro'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}